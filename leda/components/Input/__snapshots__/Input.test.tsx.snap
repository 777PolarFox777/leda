// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input SNAPSHOTS should render basic usage 1`] = `
<Input
  onBlur={[MockFunction]}
  onChange={[MockFunction]}
>
  <Wrapper
    className="input-wrapper"
  >
    <Div
      className="input-wrapper"
    >
      <div
        className="input-wrapper"
      >
        <Div
          className="input-element-wrapper"
        >
          <div
            className="input-element-wrapper"
          >
            <Input
              aria-invalid={false}
              className="input-element"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              value=""
            >
              <input
                aria-invalid={false}
                className="input-element"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                value=""
              />
            </Input>
          </div>
        </Div>
        <InvalidMessageWrapper>
          <InvalidMessage
            isValid={true}
            messages={Array []}
          >
            <Component
              isValid={true}
              messages={Array []}
            />
          </InvalidMessage>
        </InvalidMessageWrapper>
      </div>
    </Div>
  </Wrapper>
</Input>
`;

exports[`Input SNAPSHOTS should render different component states should render disabled 1`] = `
<Input
  isDisabled={true}
  onBlur={[MockFunction]}
  onChange={[MockFunction]}
>
  <Wrapper
    className="input-wrapper"
  >
    <Div
      className="input-wrapper"
    >
      <div
        className="input-wrapper"
      >
        <Div
          className="input-element-wrapper disabled"
        >
          <div
            className="input-element-wrapper disabled"
          >
            <Input
              aria-invalid={false}
              className="input-element"
              disabled={true}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              value=""
            >
              <input
                aria-invalid={false}
                className="input-element"
                disabled={true}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                value=""
              />
            </Input>
          </div>
        </Div>
      </div>
    </Div>
  </Wrapper>
</Input>
`;

exports[`Input SNAPSHOTS should render value in controllable mode 1`] = `
<Input
  onBlur={[MockFunction]}
  onChange={[MockFunction]}
  value="test value"
>
  <Wrapper
    className="input-wrapper"
  >
    <Div
      className="input-wrapper"
    >
      <div
        className="input-wrapper"
      >
        <Div
          className="input-element-wrapper"
        >
          <div
            className="input-element-wrapper"
          >
            <Input
              aria-invalid={false}
              className="input-element"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              value="test value"
            >
              <input
                aria-invalid={false}
                className="input-element"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                value="test value"
              />
            </Input>
          </div>
        </Div>
        <InvalidMessageWrapper>
          <InvalidMessage
            isValid={true}
            messages={Array []}
          >
            <Component
              isValid={true}
              messages={Array []}
            />
          </InvalidMessage>
        </InvalidMessageWrapper>
      </div>
    </Div>
  </Wrapper>
</Input>
`;

exports[`Input SNAPSHOTS should render value in controllable mode 2`] = `
<Input
  onBlur={[MockFunction]}
  onChange={[MockFunction]}
  value="new test value"
>
  <Wrapper
    className="input-wrapper"
  >
    <Div
      className="input-wrapper"
    >
      <div
        className="input-wrapper"
      >
        <Div
          className="input-element-wrapper"
        >
          <div
            className="input-element-wrapper"
          >
            <Input
              aria-invalid={false}
              className="input-element"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              value="new test value"
            >
              <input
                aria-invalid={false}
                className="input-element"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                value="new test value"
              />
            </Input>
          </div>
        </Div>
        <InvalidMessageWrapper>
          <InvalidMessage
            isValid={true}
            messages={Array []}
          >
            <Component
              isValid={true}
              messages={Array []}
            />
          </InvalidMessage>
        </InvalidMessageWrapper>
      </div>
    </Div>
  </Wrapper>
</Input>
`;
