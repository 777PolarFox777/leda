name: Pull requests CI

on: [pull_request]

jobs:
  install:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
 
    - uses: actions/cache@v1
      id: cache-node-modules
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install
      env:
        CI: true
 
  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v1
        id: cache-node-modules
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
        env:
          CI: true
      - run: npm run lint
  
  test:
    needs: install
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/cache@v1
        id: cache-node-modules
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
        env:
          CI: true
      - run: npm run test

  tsc:
    needs: install
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/cache@v1
        id: cache-node-modules
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
        env:
          CI: true
      - run: npm run tsc

